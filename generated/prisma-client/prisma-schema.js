module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.27.3). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateOverwatchCharacters {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  createOverwatchCharacters(data: OverwatchCharactersCreateInput!): OverwatchCharacters!
  updateOverwatchCharacters(data: OverwatchCharactersUpdateInput!, where: OverwatchCharactersWhereUniqueInput!): OverwatchCharacters
  updateManyOverwatchCharacterses(data: OverwatchCharactersUpdateManyMutationInput!, where: OverwatchCharactersWhereInput): BatchPayload!
  upsertOverwatchCharacters(where: OverwatchCharactersWhereUniqueInput!, create: OverwatchCharactersCreateInput!, update: OverwatchCharactersUpdateInput!): OverwatchCharacters!
  deleteOverwatchCharacters(where: OverwatchCharactersWhereUniqueInput!): OverwatchCharacters
  deleteManyOverwatchCharacterses(where: OverwatchCharactersWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type OverwatchCharacters {
  id: ID!
  name: String!
  hometown: String
  catchPhrase: String
}

type OverwatchCharactersConnection {
  pageInfo: PageInfo!
  edges: [OverwatchCharactersEdge]!
  aggregate: AggregateOverwatchCharacters!
}

input OverwatchCharactersCreateInput {
  name: String!
  hometown: String
  catchPhrase: String
}

type OverwatchCharactersEdge {
  node: OverwatchCharacters!
  cursor: String!
}

enum OverwatchCharactersOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  hometown_ASC
  hometown_DESC
  catchPhrase_ASC
  catchPhrase_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type OverwatchCharactersPreviousValues {
  id: ID!
  name: String!
  hometown: String
  catchPhrase: String
}

type OverwatchCharactersSubscriptionPayload {
  mutation: MutationType!
  node: OverwatchCharacters
  updatedFields: [String!]
  previousValues: OverwatchCharactersPreviousValues
}

input OverwatchCharactersSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: OverwatchCharactersWhereInput
  AND: [OverwatchCharactersSubscriptionWhereInput!]
  OR: [OverwatchCharactersSubscriptionWhereInput!]
  NOT: [OverwatchCharactersSubscriptionWhereInput!]
}

input OverwatchCharactersUpdateInput {
  name: String
  hometown: String
  catchPhrase: String
}

input OverwatchCharactersUpdateManyMutationInput {
  name: String
  hometown: String
  catchPhrase: String
}

input OverwatchCharactersWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  hometown: String
  hometown_not: String
  hometown_in: [String!]
  hometown_not_in: [String!]
  hometown_lt: String
  hometown_lte: String
  hometown_gt: String
  hometown_gte: String
  hometown_contains: String
  hometown_not_contains: String
  hometown_starts_with: String
  hometown_not_starts_with: String
  hometown_ends_with: String
  hometown_not_ends_with: String
  catchPhrase: String
  catchPhrase_not: String
  catchPhrase_in: [String!]
  catchPhrase_not_in: [String!]
  catchPhrase_lt: String
  catchPhrase_lte: String
  catchPhrase_gt: String
  catchPhrase_gte: String
  catchPhrase_contains: String
  catchPhrase_not_contains: String
  catchPhrase_starts_with: String
  catchPhrase_not_starts_with: String
  catchPhrase_ends_with: String
  catchPhrase_not_ends_with: String
  AND: [OverwatchCharactersWhereInput!]
  OR: [OverwatchCharactersWhereInput!]
  NOT: [OverwatchCharactersWhereInput!]
}

input OverwatchCharactersWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  overwatchCharacters(where: OverwatchCharactersWhereUniqueInput!): OverwatchCharacters
  overwatchCharacterses(where: OverwatchCharactersWhereInput, orderBy: OverwatchCharactersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OverwatchCharacters]!
  overwatchCharactersesConnection(where: OverwatchCharactersWhereInput, orderBy: OverwatchCharactersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OverwatchCharactersConnection!
  node(id: ID!): Node
}

type Subscription {
  overwatchCharacters(where: OverwatchCharactersSubscriptionWhereInput): OverwatchCharactersSubscriptionPayload
}
`
      }
    